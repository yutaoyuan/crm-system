name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install
        env:
          ELECTRON_MIRROR: https://cdn.npmmirror.com/binaries/electron/
        
      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: dist/
          

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Generate release notes
        id: release_notes
        run: |
          if [ -f "CHANGELOG.md" ]; then
            # 提取最新版本的更新日志
            awk '/^## / { if (NR==1) next; else exit } /^## / { exit } { print }' CHANGELOG.md > release_notes.txt
          else
            echo "## 更新内容" > release_notes.txt
            echo "- 新版本发布" >> release_notes.txt
            echo "- Bug修复和性能优化" >> release_notes.txt
          fi
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist-windows-latest/*.exe
            dist-macos-latest/*.dmg
            dist-ubuntu-latest/*.AppImage
            dist-ubuntu-latest/*.deb
          body_path: release_notes.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}