name: Release (Windows + macOS)

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          npm ci

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          npm ci

      - name: Rebuild native modules (sqlite3)
        run: npx electron-rebuild -f -w sqlite3

      - name: Build app (electron-builder)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
          CSC_IDENTITY_AUTO_DISCOVERY: 'false'
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo "Building version $VERSION"
          if [ "${{ runner.os }}" = "Windows" ]; then
            # Use targets defined in package.json (nsis + zip)
            npx electron-builder --win --publish=never --config.extraMetadata.version=$VERSION
          else
            # Build both x64 and arm64 DMG on macOS runner
            npx electron-builder --mac dmg --x64 --publish=never --config.extraMetadata.version=$VERSION
            npx electron-builder --mac dmg --arm64 --publish=never --config.extraMetadata.version=$VERSION
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}
          path: |
            dist/**/*.exe
            dist/**/*.zip
            dist/**/*.7z
            dist/**/*.dmg
          if-no-files-found: warn

      - name: Create GitHub Release and upload assets
        if: github.ref_type == 'tag'
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/**/*.exe
            dist/**/*.zip
            dist/**/*.7z
            dist/**/*.dmg


